import React, { useState } from 'react';
import Product from './Product'; // Ensure that the Product component is correctly imported and defined.
import { motion } from 'framer-motion';

const Products = () => {
  const products = [
    {
      title: "arqitel",
      description: "Arqitel With a continuous 3D animation, we showcase Arqitel approach and show how migration data translates into real estate.",
      live: true,
      case: false,
    },
    {
      title: "TTR",
      description: "Arqitel With a continuous 3D animation, we showcase Arqitel approach and show how migration data translates into real estate.",
      live: true,
      case: false,
    },
    {
      title: "YIR 2022",
      description: "Arqitel With a continuous 3D animation, we showcase Arqitel approach and show how migration data translates into real estate.",
      live: true,
      case: false,
    },
    {
      title: "Yahoo!",
      description: "Arqitel With a continuous 3D animation, we showcase Arqitel approach and show how migration data translates into real estate.",
      live: true,
      case: true,
    },
    {
      title: "Jungle",
      description: "Arqitel With a continuous 3D animation, we showcase Arqitel approach and show how migration data translates into real estate.",
      live: true,
      case: true,
    },
  ];

  const [pos, setPos] = useState(1);

  const mover = (val) => {
    // Possible issue: If val is not a number, this could result in NaN.
    setPos(val * 18);
  };

  return (
    <div className='mt-32 relative'>
      {products.map((val, index) => (
        <Product 
          key={index} // React requires a unique key prop for elements generated by map to prevent potential re-rendering issues.
          count={index} 
          val={val} 
          mover={mover} 
          // Ensure that Product component expects and handles the `mover` prop properly.
        />
      ))}
      <div className='absolute top-0 w-full h-full pointer-events-none'>
        <motion.div
          initial={{ y: pos, x: "-50%" }}
          animate={{ y: pos + `rem` }}
          transition={{ ease: [0.76, 0, 0.24, 1], duration: 0.6 }}
          className='window w-[20rem] absolute h-[18rem] bg-sky-100 left-[44%] overflow-hidden'
          // Possible issue: Ensure that the calculated position and sizing values result in the intended visual effect.
        >
          <motion.div
            animate={{ y: -pos * 18 + `rem` }}
            transition={{ ease: [0.76, 0, 0.24, 1], duration: 0.6 }}
            className="w-full h-full bg-sky-100"
            // Issue: This div might overlap others or may not create the intended stacking effect if the y translation is incorrect.
          ></motion.div>
          <motion.div
            animate={{ y: -pos * 18 + `rem` }}
            transition={{ ease: [0.76, 0, 0.24, 1], duration: 0.6 }}
            className="w-full h-full bg-sky-200"
          ></motion.div>
          <motion.div
            animate={{ y: -pos * 18 + `rem` }}
            transition={{ ease: [0.76, 0, 0.24, 1], duration: 0.6 }}
            className="w-full h-full bg-sky-300"
          ></motion.div>
          <motion.div
            animate={{ y: -pos * 18 + `rem` }}
            transition={{ ease: [0.76, 0, 0.24, 1], duration: 0.6 }}
            className="w-full h-full bg-sky-400"
          ></motion.div>
          <motion.div
            animate={{ y: -pos * 18 + `rem` }}
            transition={{ ease: [0.76, 0, 0.24, 1], duration: 0.6 }}
            className="w-full h-full bg-sky-500"
          ></motion.div>
        </motion.div>
      </div>
    </div>
  );
};

export default Products;
